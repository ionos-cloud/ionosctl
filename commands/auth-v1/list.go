package authv1

import (
	"context"

	"github.com/ionos-cloud/ionosctl/v6/pkg/constants"
	"github.com/ionos-cloud/ionosctl/v6/pkg/core"
	authv1 "github.com/ionos-cloud/ionosctl/v6/services/auth-v1"
	"github.com/spf13/viper"
)

func TokenListCmd() *core.Command {
	cmd := core.NewCommand(context.Background(), nil, core.CommandBuilder{
		Namespace:  "token",
		Resource:   "token",
		Verb:       "list",
		Aliases:    []string{"l", "ls"},
		ShortDesc:  "List Tokens",
		LongDesc:   "Use this command to retrieve a complete list of Tokens under your account, to list the details of all tokens, generated by the user.",
		Example:    listTokenExample,
		PreCmdRun:  core.NoPreRun,
		CmdRun:     runTokenList,
		InitClient: true,
	})
	cmd.AddIntFlag(authv1.ArgContractNo, "", 0, "Users with multiple contracts must provide the contract number, for which the tokens are listed")
	cmd.AddBoolFlag(constants.ArgNoHeaders, "", false, "When using text output, don't print headers")

	return cmd
}

func runTokenList(c *core.CommandConfig) error {
	if viper.IsSet(core.GetFlagName(c.NS, authv1.ArgContractNo)) {
		c.Printer.Verbose(contractNumberMessage, viper.GetInt32(core.GetFlagName(c.NS, authv1.ArgContractNo)))
	}
	tokens, _, err := c.AuthV1Services.Tokens().List(viper.GetInt32(core.GetFlagName(c.NS, authv1.ArgContractNo)))
	if err != nil {
		return err
	}
	return c.Printer.Print(getTokenPrint(c, getTokens(tokens)))
}
