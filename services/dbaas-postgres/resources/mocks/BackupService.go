// Code generated by MockGen. DO NOT EDIT.
// Source: backup.go

// Package mock_resources is a generated GoMock package.
package mock_resources

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resources "github.com/ionos-cloud/ionosctl/services/dbaas-postgres/resources"
)

// MockBackupsService is a mock of BackupsService interface.
type MockBackupsService struct {
	ctrl     *gomock.Controller
	recorder *MockBackupsServiceMockRecorder
}

// MockBackupsServiceMockRecorder is the mock recorder for MockBackupsService.
type MockBackupsServiceMockRecorder struct {
	mock *MockBackupsService
}

// NewMockBackupsService creates a new mock instance.
func NewMockBackupsService(ctrl *gomock.Controller) *MockBackupsService {
	mock := &MockBackupsService{ctrl: ctrl}
	mock.recorder = &MockBackupsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBackupsService) EXPECT() *MockBackupsServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockBackupsService) Get(backupId string) (*resources.BackupResponse, *resources.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", backupId)
	ret0, _ := ret[0].(*resources.BackupResponse)
	ret1, _ := ret[1].(*resources.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockBackupsServiceMockRecorder) Get(backupId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBackupsService)(nil).Get), backupId)
}

// List mocks base method.
func (m *MockBackupsService) List() (resources.ClusterBackupList, *resources.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(resources.ClusterBackupList)
	ret1, _ := ret[1].(*resources.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// List indicates an expected call of List.
func (mr *MockBackupsServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockBackupsService)(nil).List))
}

// ListBackups mocks base method.
func (m *MockBackupsService) ListBackups(clusterId string) (resources.ClusterBackupList, *resources.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBackups", clusterId)
	ret0, _ := ret[0].(resources.ClusterBackupList)
	ret1, _ := ret[1].(*resources.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListBackups indicates an expected call of ListBackups.
func (mr *MockBackupsServiceMockRecorder) ListBackups(clusterId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBackups", reflect.TypeOf((*MockBackupsService)(nil).ListBackups), clusterId)
}
