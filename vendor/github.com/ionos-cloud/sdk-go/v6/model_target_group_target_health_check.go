/*
 * CLOUD API
 *
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0-SDK.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// TargetGroupTargetHealthCheck struct for TargetGroupTargetHealthCheck
type TargetGroupTargetHealthCheck struct {
	// Check specifies whether the target VM's health is checked. If turned off, a target VM is always considered available. If turned on, the target VM is available when accepting periodic TCP connections, to ensure that it is really able to serve requests. The address and port to send the tests to are those of the target VM. The health check only consists of a connection attempt. If unspecified the default value: true is used.
	Check *bool `json:"check,omitempty"`
	// CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	CheckInterval *int32 `json:"checkInterval,omitempty"`
	// Maintenance specifies if a target VM should be marked as down, even if it is not.
	Maintenance *bool `json:"maintenance,omitempty"`
}

// GetCheck returns the Check field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *TargetGroupTargetHealthCheck) GetCheck() *bool {
	if o == nil {
		return nil
	}

	return o.Check

}

// GetCheckOk returns a tuple with the Check field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetGroupTargetHealthCheck) GetCheckOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}

	return o.Check, true
}

// SetCheck sets field value
func (o *TargetGroupTargetHealthCheck) SetCheck(v bool) {

	o.Check = &v

}

// HasCheck returns a boolean if a field has been set.
func (o *TargetGroupTargetHealthCheck) HasCheck() bool {
	if o != nil && o.Check != nil {
		return true
	}

	return false
}

// GetCheckInterval returns the CheckInterval field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *TargetGroupTargetHealthCheck) GetCheckInterval() *int32 {
	if o == nil {
		return nil
	}

	return o.CheckInterval

}

// GetCheckIntervalOk returns a tuple with the CheckInterval field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetGroupTargetHealthCheck) GetCheckIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}

	return o.CheckInterval, true
}

// SetCheckInterval sets field value
func (o *TargetGroupTargetHealthCheck) SetCheckInterval(v int32) {

	o.CheckInterval = &v

}

// HasCheckInterval returns a boolean if a field has been set.
func (o *TargetGroupTargetHealthCheck) HasCheckInterval() bool {
	if o != nil && o.CheckInterval != nil {
		return true
	}

	return false
}

// GetMaintenance returns the Maintenance field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *TargetGroupTargetHealthCheck) GetMaintenance() *bool {
	if o == nil {
		return nil
	}

	return o.Maintenance

}

// GetMaintenanceOk returns a tuple with the Maintenance field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TargetGroupTargetHealthCheck) GetMaintenanceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}

	return o.Maintenance, true
}

// SetMaintenance sets field value
func (o *TargetGroupTargetHealthCheck) SetMaintenance(v bool) {

	o.Maintenance = &v

}

// HasMaintenance returns a boolean if a field has been set.
func (o *TargetGroupTargetHealthCheck) HasMaintenance() bool {
	if o != nil && o.Maintenance != nil {
		return true
	}

	return false
}

func (o TargetGroupTargetHealthCheck) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.Check != nil {
		toSerialize["check"] = o.Check
	}

	if o.CheckInterval != nil {
		toSerialize["checkInterval"] = o.CheckInterval
	}

	if o.Maintenance != nil {
		toSerialize["maintenance"] = o.Maintenance
	}
	return json.Marshal(toSerialize)
}

type NullableTargetGroupTargetHealthCheck struct {
	value *TargetGroupTargetHealthCheck
	isSet bool
}

func (v NullableTargetGroupTargetHealthCheck) Get() *TargetGroupTargetHealthCheck {
	return v.value
}

func (v *NullableTargetGroupTargetHealthCheck) Set(val *TargetGroupTargetHealthCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetGroupTargetHealthCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetGroupTargetHealthCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetGroupTargetHealthCheck(val *TargetGroupTargetHealthCheck) *NullableTargetGroupTargetHealthCheck {
	return &NullableTargetGroupTargetHealthCheck{value: val, isSet: true}
}

func (v NullableTargetGroupTargetHealthCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetGroupTargetHealthCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
