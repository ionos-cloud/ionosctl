/*
 * CLOUD API
 *
 * An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * API version: 6.0-SDK.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// ApplicationLoadBalancerForwardingRuleProperties struct for ApplicationLoadBalancerForwardingRuleProperties
type ApplicationLoadBalancerForwardingRuleProperties struct {
	// A name of that Application Load Balancer forwarding rule
	Name *string `json:"name"`
	// Protocol of the balancing.
	Protocol *string `json:"protocol"`
	// Listening IP. (inbound)
	ListenerIp *string `json:"listenerIp"`
	// Listening port number. (inbound) (range: 1 to 65535)
	ListenerPort *int32 `json:"listenerPort"`
	HealthCheck *ApplicationLoadBalancerForwardingRuleHealthCheck `json:"healthCheck,omitempty"`
	// Array of items in that collection
	ServerCertificates *[]string `json:"serverCertificates,omitempty"`
	// Array of items in that collection
	HttpRules *[]ApplicationLoadBalancerHttpRule `json:"httpRules,omitempty"`
}



// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetName() *string {
	if o == nil {
		return nil
	}


	return o.Name

}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.Name, true
}

// SetName sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetName(v string) {


	o.Name = &v

}

// HasName returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}



// GetProtocol returns the Protocol field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetProtocol() *string {
	if o == nil {
		return nil
	}


	return o.Protocol

}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.Protocol, true
}

// SetProtocol sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetProtocol(v string) {


	o.Protocol = &v

}

// HasProtocol returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}



// GetListenerIp returns the ListenerIp field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerIp() *string {
	if o == nil {
		return nil
	}


	return o.ListenerIp

}

// GetListenerIpOk returns a tuple with the ListenerIp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.ListenerIp, true
}

// SetListenerIp sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetListenerIp(v string) {


	o.ListenerIp = &v

}

// HasListenerIp returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasListenerIp() bool {
	if o != nil && o.ListenerIp != nil {
		return true
	}

	return false
}



// GetListenerPort returns the ListenerPort field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerPort() *int32 {
	if o == nil {
		return nil
	}


	return o.ListenerPort

}

// GetListenerPortOk returns a tuple with the ListenerPort field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}


	return o.ListenerPort, true
}

// SetListenerPort sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetListenerPort(v int32) {


	o.ListenerPort = &v

}

// HasListenerPort returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasListenerPort() bool {
	if o != nil && o.ListenerPort != nil {
		return true
	}

	return false
}



// GetHealthCheck returns the HealthCheck field value
// If the value is explicit nil, the zero value for ApplicationLoadBalancerForwardingRuleHealthCheck will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetHealthCheck() *ApplicationLoadBalancerForwardingRuleHealthCheck {
	if o == nil {
		return nil
	}


	return o.HealthCheck

}

// GetHealthCheckOk returns a tuple with the HealthCheck field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetHealthCheckOk() (*ApplicationLoadBalancerForwardingRuleHealthCheck, bool) {
	if o == nil {
		return nil, false
	}


	return o.HealthCheck, true
}

// SetHealthCheck sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetHealthCheck(v ApplicationLoadBalancerForwardingRuleHealthCheck) {


	o.HealthCheck = &v

}

// HasHealthCheck returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasHealthCheck() bool {
	if o != nil && o.HealthCheck != nil {
		return true
	}

	return false
}



// GetServerCertificates returns the ServerCertificates field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetServerCertificates() *[]string {
	if o == nil {
		return nil
	}


	return o.ServerCertificates

}

// GetServerCertificatesOk returns a tuple with the ServerCertificates field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetServerCertificatesOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}


	return o.ServerCertificates, true
}

// SetServerCertificates sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetServerCertificates(v []string) {


	o.ServerCertificates = &v

}

// HasServerCertificates returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasServerCertificates() bool {
	if o != nil && o.ServerCertificates != nil {
		return true
	}

	return false
}



// GetHttpRules returns the HttpRules field value
// If the value is explicit nil, the zero value for []ApplicationLoadBalancerHttpRule will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetHttpRules() *[]ApplicationLoadBalancerHttpRule {
	if o == nil {
		return nil
	}


	return o.HttpRules

}

// GetHttpRulesOk returns a tuple with the HttpRules field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetHttpRulesOk() (*[]ApplicationLoadBalancerHttpRule, bool) {
	if o == nil {
		return nil, false
	}


	return o.HttpRules, true
}

// SetHttpRules sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetHttpRules(v []ApplicationLoadBalancerHttpRule) {


	o.HttpRules = &v

}

// HasHttpRules returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasHttpRules() bool {
	if o != nil && o.HttpRules != nil {
		return true
	}

	return false
}


func (o ApplicationLoadBalancerForwardingRuleProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	

	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	

	if o.ListenerIp != nil {
		toSerialize["listenerIp"] = o.ListenerIp
	}
	

	if o.ListenerPort != nil {
		toSerialize["listenerPort"] = o.ListenerPort
	}
	

	if o.HealthCheck != nil {
		toSerialize["healthCheck"] = o.HealthCheck
	}
	

	if o.ServerCertificates != nil {
		toSerialize["serverCertificates"] = o.ServerCertificates
	}
	

	if o.HttpRules != nil {
		toSerialize["httpRules"] = o.HttpRules
	}
	
	return json.Marshal(toSerialize)
}

type NullableApplicationLoadBalancerForwardingRuleProperties struct {
	value *ApplicationLoadBalancerForwardingRuleProperties
	isSet bool
}

func (v NullableApplicationLoadBalancerForwardingRuleProperties) Get() *ApplicationLoadBalancerForwardingRuleProperties {
	return v.value
}

func (v *NullableApplicationLoadBalancerForwardingRuleProperties) Set(val *ApplicationLoadBalancerForwardingRuleProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationLoadBalancerForwardingRuleProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationLoadBalancerForwardingRuleProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationLoadBalancerForwardingRuleProperties(val *ApplicationLoadBalancerForwardingRuleProperties) *NullableApplicationLoadBalancerForwardingRuleProperties {
	return &NullableApplicationLoadBalancerForwardingRuleProperties{value: val, isSet: true}
}

func (v NullableApplicationLoadBalancerForwardingRuleProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationLoadBalancerForwardingRuleProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


