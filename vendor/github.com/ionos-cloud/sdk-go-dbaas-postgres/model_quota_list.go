/*
 * IONOS DBaaS REST API
 *
 * An enterprise-grade Database is provided as a Service (DBaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.  The API allows you to create additional database clusters or modify existing ones. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * API version: 0.0.1
 * Contact: dbaas-dev@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// QuotaList list of quota usage and limit
type QuotaList struct {
	// resources and their quantities
	QuotaUsage *map[string]interface{} `json:"quotaUsage,omitempty"`
	// resources and their quantities
	QuotaLimits *map[string]interface{} `json:"quotaLimits,omitempty"`
}

// GetQuotaUsage returns the QuotaUsage field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *QuotaList) GetQuotaUsage() *map[string]interface{} {
	if o == nil {
		return nil
	}

	return o.QuotaUsage

}

// GetQuotaUsageOk returns a tuple with the QuotaUsage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotaList) GetQuotaUsageOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}

	return o.QuotaUsage, true
}

// SetQuotaUsage sets field value
func (o *QuotaList) SetQuotaUsage(v map[string]interface{}) {

	o.QuotaUsage = &v

}

// HasQuotaUsage returns a boolean if a field has been set.
func (o *QuotaList) HasQuotaUsage() bool {
	if o != nil && o.QuotaUsage != nil {
		return true
	}

	return false
}

// GetQuotaLimits returns the QuotaLimits field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *QuotaList) GetQuotaLimits() *map[string]interface{} {
	if o == nil {
		return nil
	}

	return o.QuotaLimits

}

// GetQuotaLimitsOk returns a tuple with the QuotaLimits field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuotaList) GetQuotaLimitsOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}

	return o.QuotaLimits, true
}

// SetQuotaLimits sets field value
func (o *QuotaList) SetQuotaLimits(v map[string]interface{}) {

	o.QuotaLimits = &v

}

// HasQuotaLimits returns a boolean if a field has been set.
func (o *QuotaList) HasQuotaLimits() bool {
	if o != nil && o.QuotaLimits != nil {
		return true
	}

	return false
}

func (o QuotaList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.QuotaUsage != nil {
		toSerialize["quotaUsage"] = o.QuotaUsage
	}

	if o.QuotaLimits != nil {
		toSerialize["quotaLimits"] = o.QuotaLimits
	}

	return json.Marshal(toSerialize)
}

type NullableQuotaList struct {
	value *QuotaList
	isSet bool
}

func (v NullableQuotaList) Get() *QuotaList {
	return v.value
}

func (v *NullableQuotaList) Set(val *QuotaList) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaList) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaList(val *QuotaList) *NullableQuotaList {
	return &NullableQuotaList{value: val, isSet: true}
}

func (v NullableQuotaList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
