/*
 * IONOS DBaaS REST API
 *
 * An enterprise-grade Database is provided as a Service (DBaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.  The API allows you to create additional databse clusters or modify existing ones. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * API version: 0.0.1-SDK.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// PatchClusterRequest payload to change a cluster
type PatchClusterRequest struct {
	// The number of CPU cores per replica.
	CpuCoreCount *float32 `json:"cpu_core_count,omitempty"`
	// The amount of memory per replica.
	RamSize *string `json:"ram_size,omitempty"`
	// The amount of storage per replica.
	StorageSize *string `json:"storage_size,omitempty"`
	// Deprecated: backup is always enabled. Enables automatic backups of your cluster. 
	BackupEnabled *bool `json:"backup_enabled,omitempty"`
	// The friendly name of your cluster.
	DisplayName *string `json:"display_name,omitempty"`
	MaintenanceWindow *MaintenanceWindow `json:"maintenance_window,omitempty"`
	// The PostgreSQL version of your cluster.
	PostgresVersion *string `json:"postgres_version,omitempty"`
}



// GetCpuCoreCount returns the CpuCoreCount field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *PatchClusterRequest) GetCpuCoreCount() *float32 {
	if o == nil {
		return nil
	}


	return o.CpuCoreCount

}

// GetCpuCoreCountOk returns a tuple with the CpuCoreCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterRequest) GetCpuCoreCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}


	return o.CpuCoreCount, true
}

// SetCpuCoreCount sets field value
func (o *PatchClusterRequest) SetCpuCoreCount(v float32) {


	o.CpuCoreCount = &v

}

// HasCpuCoreCount returns a boolean if a field has been set.
func (o *PatchClusterRequest) HasCpuCoreCount() bool {
	if o != nil && o.CpuCoreCount != nil {
		return true
	}

	return false
}



// GetRamSize returns the RamSize field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PatchClusterRequest) GetRamSize() *string {
	if o == nil {
		return nil
	}


	return o.RamSize

}

// GetRamSizeOk returns a tuple with the RamSize field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterRequest) GetRamSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.RamSize, true
}

// SetRamSize sets field value
func (o *PatchClusterRequest) SetRamSize(v string) {


	o.RamSize = &v

}

// HasRamSize returns a boolean if a field has been set.
func (o *PatchClusterRequest) HasRamSize() bool {
	if o != nil && o.RamSize != nil {
		return true
	}

	return false
}



// GetStorageSize returns the StorageSize field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PatchClusterRequest) GetStorageSize() *string {
	if o == nil {
		return nil
	}


	return o.StorageSize

}

// GetStorageSizeOk returns a tuple with the StorageSize field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterRequest) GetStorageSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.StorageSize, true
}

// SetStorageSize sets field value
func (o *PatchClusterRequest) SetStorageSize(v string) {


	o.StorageSize = &v

}

// HasStorageSize returns a boolean if a field has been set.
func (o *PatchClusterRequest) HasStorageSize() bool {
	if o != nil && o.StorageSize != nil {
		return true
	}

	return false
}



// GetBackupEnabled returns the BackupEnabled field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *PatchClusterRequest) GetBackupEnabled() *bool {
	if o == nil {
		return nil
	}


	return o.BackupEnabled

}

// GetBackupEnabledOk returns a tuple with the BackupEnabled field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterRequest) GetBackupEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}


	return o.BackupEnabled, true
}

// SetBackupEnabled sets field value
func (o *PatchClusterRequest) SetBackupEnabled(v bool) {


	o.BackupEnabled = &v

}

// HasBackupEnabled returns a boolean if a field has been set.
func (o *PatchClusterRequest) HasBackupEnabled() bool {
	if o != nil && o.BackupEnabled != nil {
		return true
	}

	return false
}



// GetDisplayName returns the DisplayName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PatchClusterRequest) GetDisplayName() *string {
	if o == nil {
		return nil
	}


	return o.DisplayName

}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.DisplayName, true
}

// SetDisplayName sets field value
func (o *PatchClusterRequest) SetDisplayName(v string) {


	o.DisplayName = &v

}

// HasDisplayName returns a boolean if a field has been set.
func (o *PatchClusterRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}



// GetMaintenanceWindow returns the MaintenanceWindow field value
// If the value is explicit nil, the zero value for MaintenanceWindow will be returned
func (o *PatchClusterRequest) GetMaintenanceWindow() *MaintenanceWindow {
	if o == nil {
		return nil
	}


	return o.MaintenanceWindow

}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterRequest) GetMaintenanceWindowOk() (*MaintenanceWindow, bool) {
	if o == nil {
		return nil, false
	}


	return o.MaintenanceWindow, true
}

// SetMaintenanceWindow sets field value
func (o *PatchClusterRequest) SetMaintenanceWindow(v MaintenanceWindow) {


	o.MaintenanceWindow = &v

}

// HasMaintenanceWindow returns a boolean if a field has been set.
func (o *PatchClusterRequest) HasMaintenanceWindow() bool {
	if o != nil && o.MaintenanceWindow != nil {
		return true
	}

	return false
}



// GetPostgresVersion returns the PostgresVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PatchClusterRequest) GetPostgresVersion() *string {
	if o == nil {
		return nil
	}


	return o.PostgresVersion

}

// GetPostgresVersionOk returns a tuple with the PostgresVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterRequest) GetPostgresVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.PostgresVersion, true
}

// SetPostgresVersion sets field value
func (o *PatchClusterRequest) SetPostgresVersion(v string) {


	o.PostgresVersion = &v

}

// HasPostgresVersion returns a boolean if a field has been set.
func (o *PatchClusterRequest) HasPostgresVersion() bool {
	if o != nil && o.PostgresVersion != nil {
		return true
	}

	return false
}


func (o PatchClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.CpuCoreCount != nil {
		toSerialize["cpu_core_count"] = o.CpuCoreCount
	}
	

	if o.RamSize != nil {
		toSerialize["ram_size"] = o.RamSize
	}
	

	if o.StorageSize != nil {
		toSerialize["storage_size"] = o.StorageSize
	}
	

	if o.BackupEnabled != nil {
		toSerialize["backup_enabled"] = o.BackupEnabled
	}
	

	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	

	if o.MaintenanceWindow != nil {
		toSerialize["maintenance_window"] = o.MaintenanceWindow
	}
	

	if o.PostgresVersion != nil {
		toSerialize["postgres_version"] = o.PostgresVersion
	}
	
	return json.Marshal(toSerialize)
}

type NullablePatchClusterRequest struct {
	value *PatchClusterRequest
	isSet bool
}

func (v NullablePatchClusterRequest) Get() *PatchClusterRequest {
	return v.value
}

func (v *NullablePatchClusterRequest) Set(val *PatchClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchClusterRequest(val *PatchClusterRequest) *NullablePatchClusterRequest {
	return &NullablePatchClusterRequest{value: val, isSet: true}
}

func (v NullablePatchClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


