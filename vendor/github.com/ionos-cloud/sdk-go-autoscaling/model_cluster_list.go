/*
 * IONOS DBaaS REST API
 *
 * An enterprise-grade Database is provided as a Service (DBaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.  The API allows you to create additional databse clusters or modify existing ones. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * API version: 0.0.1-SDK.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// ClusterList list of clusters
type ClusterList struct {
	Page *int32 `json:"page,omitempty"`
	Data *[]Cluster `json:"data,omitempty"`
}



// GetPage returns the Page field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ClusterList) GetPage() *int32 {
	if o == nil {
		return nil
	}


	return o.Page

}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterList) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}


	return o.Page, true
}

// SetPage sets field value
func (o *ClusterList) SetPage(v int32) {


	o.Page = &v

}

// HasPage returns a boolean if a field has been set.
func (o *ClusterList) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}



// GetData returns the Data field value
// If the value is explicit nil, the zero value for []Cluster will be returned
func (o *ClusterList) GetData() *[]Cluster {
	if o == nil {
		return nil
	}


	return o.Data

}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterList) GetDataOk() (*[]Cluster, bool) {
	if o == nil {
		return nil, false
	}


	return o.Data, true
}

// SetData sets field value
func (o *ClusterList) SetData(v []Cluster) {


	o.Data = &v

}

// HasData returns a boolean if a field has been set.
func (o *ClusterList) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}


func (o ClusterList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	

	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	
	return json.Marshal(toSerialize)
}

type NullableClusterList struct {
	value *ClusterList
	isSet bool
}

func (v NullableClusterList) Get() *ClusterList {
	return v.value
}

func (v *NullableClusterList) Set(val *ClusterList) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterList) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterList(val *ClusterList) *NullableClusterList {
	return &NullableClusterList{value: val, isSet: true}
}

func (v NullableClusterList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


