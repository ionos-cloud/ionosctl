/*
 * Auth API
 *
 * Use the Auth API to manage tokens for secure access to IONOS Cloud  APIs (Auth API, Cloud API, Reseller API, Activity Log API, and others).
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// Request struct for Request
type Request struct {
	// The request's unique identifier.
	RequestId  *string `json:"requestId,omitempty"`
	IdentityId *int32  `json:"identityId,omitempty"`
	// URL to the object representation (absolute path).
	Uri *string `json:"uri,omitempty"`
}

// GetRequestId returns the RequestId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Request) GetRequestId() *string {
	if o == nil {
		return nil
	}

	return o.RequestId

}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Request) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.RequestId, true
}

// SetRequestId sets field value
func (o *Request) SetRequestId(v string) {

	o.RequestId = &v

}

// HasRequestId returns a boolean if a field has been set.
func (o *Request) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// GetIdentityId returns the IdentityId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Request) GetIdentityId() *int32 {
	if o == nil {
		return nil
	}

	return o.IdentityId

}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Request) GetIdentityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}

	return o.IdentityId, true
}

// SetIdentityId sets field value
func (o *Request) SetIdentityId(v int32) {

	o.IdentityId = &v

}

// HasIdentityId returns a boolean if a field has been set.
func (o *Request) HasIdentityId() bool {
	if o != nil && o.IdentityId != nil {
		return true
	}

	return false
}

// GetUri returns the Uri field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Request) GetUri() *string {
	if o == nil {
		return nil
	}

	return o.Uri

}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Request) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Uri, true
}

// SetUri sets field value
func (o *Request) SetUri(v string) {

	o.Uri = &v

}

// HasUri returns a boolean if a field has been set.
func (o *Request) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

func (o Request) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.RequestId != nil {
		toSerialize["requestId"] = o.RequestId
	}

	if o.IdentityId != nil {
		toSerialize["identityId"] = o.IdentityId
	}

	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	return json.Marshal(toSerialize)
}

type NullableRequest struct {
	value *Request
	isSet bool
}

func (v NullableRequest) Get() *Request {
	return v.value
}

func (v *NullableRequest) Set(val *Request) {
	v.value = val
	v.isSet = true
}

func (v NullableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequest(val *Request) *NullableRequest {
	return &NullableRequest{value: val, isSet: true}
}

func (v NullableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
