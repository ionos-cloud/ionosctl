/*
 * Auth API
 *
 * Use the Auth API to manage tokens for secure access to IONOS Cloud  APIs (Auth API, Cloud API, Reseller API, Activity Log API, and others).
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// TokenDeleteByIdResponse struct for TokenDeleteByIdResponse
type TokenDeleteByIdResponse struct {
	Request *RequestDeleteByIdResponse `json:"request,omitempty"`
	Success *bool                      `json:"success,omitempty"`
}

// GetRequest returns the Request field value
// If the value is explicit nil, the zero value for RequestDeleteByIdResponse will be returned
func (o *TokenDeleteByIdResponse) GetRequest() *RequestDeleteByIdResponse {
	if o == nil {
		return nil
	}

	return o.Request

}

// GetRequestOk returns a tuple with the Request field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenDeleteByIdResponse) GetRequestOk() (*RequestDeleteByIdResponse, bool) {
	if o == nil {
		return nil, false
	}

	return o.Request, true
}

// SetRequest sets field value
func (o *TokenDeleteByIdResponse) SetRequest(v RequestDeleteByIdResponse) {

	o.Request = &v

}

// HasRequest returns a boolean if a field has been set.
func (o *TokenDeleteByIdResponse) HasRequest() bool {
	if o != nil && o.Request != nil {
		return true
	}

	return false
}

// GetSuccess returns the Success field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *TokenDeleteByIdResponse) GetSuccess() *bool {
	if o == nil {
		return nil
	}

	return o.Success

}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenDeleteByIdResponse) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}

	return o.Success, true
}

// SetSuccess sets field value
func (o *TokenDeleteByIdResponse) SetSuccess(v bool) {

	o.Success = &v

}

// HasSuccess returns a boolean if a field has been set.
func (o *TokenDeleteByIdResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

func (o TokenDeleteByIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.Request != nil {
		toSerialize["request"] = o.Request
	}

	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableTokenDeleteByIdResponse struct {
	value *TokenDeleteByIdResponse
	isSet bool
}

func (v NullableTokenDeleteByIdResponse) Get() *TokenDeleteByIdResponse {
	return v.value
}

func (v *NullableTokenDeleteByIdResponse) Set(val *TokenDeleteByIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenDeleteByIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenDeleteByIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenDeleteByIdResponse(val *TokenDeleteByIdResponse) *NullableTokenDeleteByIdResponse {
	return &NullableTokenDeleteByIdResponse{value: val, isSet: true}
}

func (v NullableTokenDeleteByIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenDeleteByIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
