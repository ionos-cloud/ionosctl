/*
 * Auth API
 *
 * Use the Auth API to manage tokens for secure access to IONOS Cloud  APIs (Auth API, Cloud API, Reseller API, Activity Log API, and others).
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// RequestDeleteByIdResponse struct for RequestDeleteByIdResponse
type RequestDeleteByIdResponse struct {
	// The request's unique identifier.
	RequestId *string `json:"requestId,omitempty"`
	// The deleted token's unique identifier.
	KeyIdentifier *string `json:"keyIdentifier,omitempty"`
}

// GetRequestId returns the RequestId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RequestDeleteByIdResponse) GetRequestId() *string {
	if o == nil {
		return nil
	}

	return o.RequestId

}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestDeleteByIdResponse) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.RequestId, true
}

// SetRequestId sets field value
func (o *RequestDeleteByIdResponse) SetRequestId(v string) {

	o.RequestId = &v

}

// HasRequestId returns a boolean if a field has been set.
func (o *RequestDeleteByIdResponse) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// GetKeyIdentifier returns the KeyIdentifier field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RequestDeleteByIdResponse) GetKeyIdentifier() *string {
	if o == nil {
		return nil
	}

	return o.KeyIdentifier

}

// GetKeyIdentifierOk returns a tuple with the KeyIdentifier field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestDeleteByIdResponse) GetKeyIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.KeyIdentifier, true
}

// SetKeyIdentifier sets field value
func (o *RequestDeleteByIdResponse) SetKeyIdentifier(v string) {

	o.KeyIdentifier = &v

}

// HasKeyIdentifier returns a boolean if a field has been set.
func (o *RequestDeleteByIdResponse) HasKeyIdentifier() bool {
	if o != nil && o.KeyIdentifier != nil {
		return true
	}

	return false
}

func (o RequestDeleteByIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.RequestId != nil {
		toSerialize["requestId"] = o.RequestId
	}

	if o.KeyIdentifier != nil {
		toSerialize["keyIdentifier"] = o.KeyIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableRequestDeleteByIdResponse struct {
	value *RequestDeleteByIdResponse
	isSet bool
}

func (v NullableRequestDeleteByIdResponse) Get() *RequestDeleteByIdResponse {
	return v.value
}

func (v *NullableRequestDeleteByIdResponse) Set(val *RequestDeleteByIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestDeleteByIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestDeleteByIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestDeleteByIdResponse(val *RequestDeleteByIdResponse) *NullableRequestDeleteByIdResponse {
	return &NullableRequestDeleteByIdResponse{value: val, isSet: true}
}

func (v NullableRequestDeleteByIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestDeleteByIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
