/*
 * VPN Gateways
 *
 * POC Docs for VPN gateway as service
 *
 * API version: 0.0.1
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// IPSecGatewayCreate struct for IPSecGatewayCreate
type IPSecGatewayCreate struct {
	// Metadata
	Metadata   *map[string]interface{} `json:"metadata,omitempty"`
	Properties *IPSecGateway           `json:"properties"`
}

// NewIPSecGatewayCreate instantiates a new IPSecGatewayCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPSecGatewayCreate(properties IPSecGateway) *IPSecGatewayCreate {
	this := IPSecGatewayCreate{}

	this.Properties = &properties

	return &this
}

// NewIPSecGatewayCreateWithDefaults instantiates a new IPSecGatewayCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPSecGatewayCreateWithDefaults() *IPSecGatewayCreate {
	this := IPSecGatewayCreate{}
	return &this
}

// GetMetadata returns the Metadata field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *IPSecGatewayCreate) GetMetadata() *map[string]interface{} {
	if o == nil {
		return nil
	}

	return o.Metadata

}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecGatewayCreate) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}

	return o.Metadata, true
}

// SetMetadata sets field value
func (o *IPSecGatewayCreate) SetMetadata(v map[string]interface{}) {

	o.Metadata = &v

}

// HasMetadata returns a boolean if a field has been set.
func (o *IPSecGatewayCreate) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// GetProperties returns the Properties field value
// If the value is explicit nil, the zero value for IPSecGateway will be returned
func (o *IPSecGatewayCreate) GetProperties() *IPSecGateway {
	if o == nil {
		return nil
	}

	return o.Properties

}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecGatewayCreate) GetPropertiesOk() (*IPSecGateway, bool) {
	if o == nil {
		return nil, false
	}

	return o.Properties, true
}

// SetProperties sets field value
func (o *IPSecGatewayCreate) SetProperties(v IPSecGateway) {

	o.Properties = &v

}

// HasProperties returns a boolean if a field has been set.
func (o *IPSecGatewayCreate) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

func (o IPSecGatewayCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}

	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}

	return json.Marshal(toSerialize)
}

type NullableIPSecGatewayCreate struct {
	value *IPSecGatewayCreate
	isSet bool
}

func (v NullableIPSecGatewayCreate) Get() *IPSecGatewayCreate {
	return v.value
}

func (v *NullableIPSecGatewayCreate) Set(val *IPSecGatewayCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableIPSecGatewayCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableIPSecGatewayCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPSecGatewayCreate(val *IPSecGatewayCreate) *NullableIPSecGatewayCreate {
	return &NullableIPSecGatewayCreate{value: val, isSet: true}
}

func (v NullableIPSecGatewayCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPSecGatewayCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
