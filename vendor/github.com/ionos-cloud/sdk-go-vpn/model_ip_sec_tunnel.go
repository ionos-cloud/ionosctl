/*
 * VPN Gateways
 *
 * POC Docs for VPN gateway as service
 *
 * API version: 0.0.1
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// IPSecTunnel Properties with all data needed to create a new IPSec Gateway Tunnel.\\ __Note__: there is a limit of 20 tunnels per IPSec Gateway.
type IPSecTunnel struct {
	// The human readable name of your IPSec Gateway Tunnel.
	Name *string `json:"name"`
	// Human readable description of the IPSec Gateway Tunnel.
	Description *string `json:"description,omitempty"`
	// The remote peer host fully qualified domain name or IPV4 IP to connect to. * __Note__: This should be the public IP of the remote peer. * Tunnels only support IPV4 or hostname (fully qualified DNS name).
	RemoteHost *string          `json:"remoteHost"`
	Auth       *IPSecTunnelAuth `json:"auth"`
	Ike        *IKEEncryption   `json:"ike"`
	Esp        *ESPEncryption   `json:"esp"`
	// The network CIDRs on the \"Left\" side that are allowed to connect to the IPSec tunnel, i.e the CIDRs within your IONOS Cloud LAN.  Specify \"0.0.0.0/0\" or \"::/0\" for all addresses.
	CloudNetworkCIDRs *[]string `json:"cloudNetworkCIDRs"`
	// The network CIDRs on the \"Right\" side that are allowed to connect to the IPSec tunnel.  Specify \"0.0.0.0/0\" or \"::/0\" for all addresses.
	PeerNetworkCIDRs *[]string `json:"peerNetworkCIDRs"`
}

// NewIPSecTunnel instantiates a new IPSecTunnel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPSecTunnel(name string, remoteHost string, auth IPSecTunnelAuth, ike IKEEncryption, esp ESPEncryption, cloudNetworkCIDRs []string, peerNetworkCIDRs []string) *IPSecTunnel {
	this := IPSecTunnel{}

	this.Name = &name
	this.RemoteHost = &remoteHost
	this.Auth = &auth
	this.Ike = &ike
	this.Esp = &esp
	this.CloudNetworkCIDRs = &cloudNetworkCIDRs
	this.PeerNetworkCIDRs = &peerNetworkCIDRs

	return &this
}

// NewIPSecTunnelWithDefaults instantiates a new IPSecTunnel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPSecTunnelWithDefaults() *IPSecTunnel {
	this := IPSecTunnel{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IPSecTunnel) GetName() *string {
	if o == nil {
		return nil
	}

	return o.Name

}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Name, true
}

// SetName sets field value
func (o *IPSecTunnel) SetName(v string) {

	o.Name = &v

}

// HasName returns a boolean if a field has been set.
func (o *IPSecTunnel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IPSecTunnel) GetDescription() *string {
	if o == nil {
		return nil
	}

	return o.Description

}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Description, true
}

// SetDescription sets field value
func (o *IPSecTunnel) SetDescription(v string) {

	o.Description = &v

}

// HasDescription returns a boolean if a field has been set.
func (o *IPSecTunnel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// GetRemoteHost returns the RemoteHost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *IPSecTunnel) GetRemoteHost() *string {
	if o == nil {
		return nil
	}

	return o.RemoteHost

}

// GetRemoteHostOk returns a tuple with the RemoteHost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetRemoteHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.RemoteHost, true
}

// SetRemoteHost sets field value
func (o *IPSecTunnel) SetRemoteHost(v string) {

	o.RemoteHost = &v

}

// HasRemoteHost returns a boolean if a field has been set.
func (o *IPSecTunnel) HasRemoteHost() bool {
	if o != nil && o.RemoteHost != nil {
		return true
	}

	return false
}

// GetAuth returns the Auth field value
// If the value is explicit nil, the zero value for IPSecTunnelAuth will be returned
func (o *IPSecTunnel) GetAuth() *IPSecTunnelAuth {
	if o == nil {
		return nil
	}

	return o.Auth

}

// GetAuthOk returns a tuple with the Auth field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetAuthOk() (*IPSecTunnelAuth, bool) {
	if o == nil {
		return nil, false
	}

	return o.Auth, true
}

// SetAuth sets field value
func (o *IPSecTunnel) SetAuth(v IPSecTunnelAuth) {

	o.Auth = &v

}

// HasAuth returns a boolean if a field has been set.
func (o *IPSecTunnel) HasAuth() bool {
	if o != nil && o.Auth != nil {
		return true
	}

	return false
}

// GetIke returns the Ike field value
// If the value is explicit nil, the zero value for IKEEncryption will be returned
func (o *IPSecTunnel) GetIke() *IKEEncryption {
	if o == nil {
		return nil
	}

	return o.Ike

}

// GetIkeOk returns a tuple with the Ike field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetIkeOk() (*IKEEncryption, bool) {
	if o == nil {
		return nil, false
	}

	return o.Ike, true
}

// SetIke sets field value
func (o *IPSecTunnel) SetIke(v IKEEncryption) {

	o.Ike = &v

}

// HasIke returns a boolean if a field has been set.
func (o *IPSecTunnel) HasIke() bool {
	if o != nil && o.Ike != nil {
		return true
	}

	return false
}

// GetEsp returns the Esp field value
// If the value is explicit nil, the zero value for ESPEncryption will be returned
func (o *IPSecTunnel) GetEsp() *ESPEncryption {
	if o == nil {
		return nil
	}

	return o.Esp

}

// GetEspOk returns a tuple with the Esp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetEspOk() (*ESPEncryption, bool) {
	if o == nil {
		return nil, false
	}

	return o.Esp, true
}

// SetEsp sets field value
func (o *IPSecTunnel) SetEsp(v ESPEncryption) {

	o.Esp = &v

}

// HasEsp returns a boolean if a field has been set.
func (o *IPSecTunnel) HasEsp() bool {
	if o != nil && o.Esp != nil {
		return true
	}

	return false
}

// GetCloudNetworkCIDRs returns the CloudNetworkCIDRs field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *IPSecTunnel) GetCloudNetworkCIDRs() *[]string {
	if o == nil {
		return nil
	}

	return o.CloudNetworkCIDRs

}

// GetCloudNetworkCIDRsOk returns a tuple with the CloudNetworkCIDRs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetCloudNetworkCIDRsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}

	return o.CloudNetworkCIDRs, true
}

// SetCloudNetworkCIDRs sets field value
func (o *IPSecTunnel) SetCloudNetworkCIDRs(v []string) {

	o.CloudNetworkCIDRs = &v

}

// HasCloudNetworkCIDRs returns a boolean if a field has been set.
func (o *IPSecTunnel) HasCloudNetworkCIDRs() bool {
	if o != nil && o.CloudNetworkCIDRs != nil {
		return true
	}

	return false
}

// GetPeerNetworkCIDRs returns the PeerNetworkCIDRs field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *IPSecTunnel) GetPeerNetworkCIDRs() *[]string {
	if o == nil {
		return nil
	}

	return o.PeerNetworkCIDRs

}

// GetPeerNetworkCIDRsOk returns a tuple with the PeerNetworkCIDRs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPSecTunnel) GetPeerNetworkCIDRsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}

	return o.PeerNetworkCIDRs, true
}

// SetPeerNetworkCIDRs sets field value
func (o *IPSecTunnel) SetPeerNetworkCIDRs(v []string) {

	o.PeerNetworkCIDRs = &v

}

// HasPeerNetworkCIDRs returns a boolean if a field has been set.
func (o *IPSecTunnel) HasPeerNetworkCIDRs() bool {
	if o != nil && o.PeerNetworkCIDRs != nil {
		return true
	}

	return false
}

func (o IPSecTunnel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}

	if o.Description != nil {
		toSerialize["description"] = o.Description
	}

	if o.RemoteHost != nil {
		toSerialize["remoteHost"] = o.RemoteHost
	}

	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}

	if o.Ike != nil {
		toSerialize["ike"] = o.Ike
	}

	if o.Esp != nil {
		toSerialize["esp"] = o.Esp
	}

	if o.CloudNetworkCIDRs != nil {
		toSerialize["cloudNetworkCIDRs"] = o.CloudNetworkCIDRs
	}

	if o.PeerNetworkCIDRs != nil {
		toSerialize["peerNetworkCIDRs"] = o.PeerNetworkCIDRs
	}

	return json.Marshal(toSerialize)
}

type NullableIPSecTunnel struct {
	value *IPSecTunnel
	isSet bool
}

func (v NullableIPSecTunnel) Get() *IPSecTunnel {
	return v.value
}

func (v *NullableIPSecTunnel) Set(val *IPSecTunnel) {
	v.value = val
	v.isSet = true
}

func (v NullableIPSecTunnel) IsSet() bool {
	return v.isSet
}

func (v *NullableIPSecTunnel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPSecTunnel(val *IPSecTunnel) *NullableIPSecTunnel {
	return &NullableIPSecTunnel{value: val, isSet: true}
}

func (v NullableIPSecTunnel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPSecTunnel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
